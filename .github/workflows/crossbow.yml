# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.


# NOTE: must set "Crossbow" as name to have the badge links working in the
# github comment reports!
name: Crossbow
on:
  push:
    branches:
      - "*-github-*"

env:
  ARCHERY_DEBUG: 1
  ARCHERY_USE_DOCKER_CLI: 1


jobs:
  build:
    name: "Build wheel for manylinux 2014"
    runs-on: ["self-hosted", "Linux", "arm64"]
    env:
      # archery uses these environment variables
      ARCH: arm64v8
      ARCHERY_USE_DOCKER_CLI: 0
      PYTHON: "3.12"

    steps:
      - name: Checkout Arrow
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: arrow
          repository: sandeepgupta12/arrow
          ref: 64c5e5fc585845873721cc442146b1ade0661316
          submodules: recursive

      - name: Set up Python by actions/setup-python
        if: |
          !(runner.os == 'Linux' && runner.arch != 'X64')
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          python-version: 3.12
      - name: Set up Python by apt
        if: runner.os == 'Linux' && runner.arch != 'X64'
        run: |
          sudo apt update
          sudo apt-get install -y python3-pip
          pip install -U pip
          echo "$HOME/.local/bin" >>"$GITHUB_PATH"
      - name: Install Archery
        shell: bash
        run: pip install -e arrow/dev/archery[all]

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build wheel
        shell: bash
        run: archery docker run -e SETUPTOOLS_SCM_PRETEND_VERSION=18.0.0.dev6 python-wheel-manylinux-2014

      - uses: actions/upload-artifact@v3
        with:
          name: wheel
          path: arrow/python/repaired_wheels/*.whl

      # TODO(kszucs): auditwheel show
      - name: Test wheel
        shell: bash
        run: |
          archery docker run python-wheel-manylinux-test-imports
          archery docker run python-wheel-manylinux-test-unittests

      - name: Test wheel on AlmaLinux 8
        shell: bash
        if: |
          '3.12' == '3.8'
        env:
          ALMALINUX: "8"
        run: |
          archery docker run \
            -e ARROW_GANDIVA=OFF \
            -e TEST_DEFAULT=0 \
            -e TEST_PYARROW_VERSION=18.0.0.dev6 \
            -e TEST_PYTHON_VERSIONS=3.12 \
            -e TEST_WHEEL_PLATFORM_TAGS=manylinux_2_17_aarch64.manylinux2014_aarch64 \
            -e TEST_WHEELS=1 \
            almalinux-verify-rc

      - name: Test wheel on Ubuntu 20.04
        shell: bash
        if: |
          '3.12' == '3.8'
        env:
          UBUNTU: "20.04"
        run: |
          archery docker run \
            -e TEST_DEFAULT=0 \
            -e TEST_PYARROW_VERSION=18.0.0.dev6 \
            -e TEST_PYTHON_VERSIONS=3.12 \
            -e TEST_WHEEL_PLATFORM_TAGS=manylinux_2_17_aarch64.manylinux2014_aarch64 \
            -e TEST_WHEELS=1 \
            ubuntu-verify-rc

      - name: Test wheel on Ubuntu 22.04
        shell: bash
        if: |
          '3.12' == '3.10'
        env:
          UBUNTU: "22.04"
        run: |
          archery docker run \
            -e TEST_DEFAULT=0 \
            -e TEST_PYARROW_VERSION=18.0.0.dev6 \
            -e TEST_PYTHON_VERSIONS=3.12 \
            -e TEST_WHEEL_PLATFORM_TAGS=manylinux_2_17_aarch64.manylinux2014_aarch64 \
            -e TEST_WHEELS=1 \
            ubuntu-verify-rc

      - name: Set up Python by actions/setup-python
        if: |
          !(runner.os == 'Linux' && runner.arch != 'X64')
        uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Set up Python by apt
        if: runner.os == 'Linux' && runner.arch != 'X64'
        run: |
          sudo apt update
          sudo apt install -y \
            libgit2-dev \
            libpython3-dev \
            python3-pip
          sudo python3 -m pip install --upgrade pip
      - name: Checkout Crossbow
        uses: actions/checkout@v4
        with:
          path: crossbow
          ref: build-20
      - name: Setup Crossbow
        shell: bash
        run: |
          python3 -m pip install -e arrow/dev/archery[crossbow]
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Upload artifacts
        shell: bash
        run: |
          archery crossbow \
            --queue-path $(pwd)/crossbow \
            --queue-remote https://github.com/sandeepgupta12/crossbow \
            upload-artifacts \
            --sha build-20-github-wheel-manylinux-2014-cp312-arm64 \
            --tag build-20-github-wheel-manylinux-2014-cp312-arm64 \
            "arrow/python/repaired_wheels/*.whl"
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
      - name: Verify uploaded artifacts
        shell: bash
        run: |
          archery crossbow \
            --queue-path $(pwd)/crossbow \
            --queue-remote https://github.com/sandeepgupta12/crossbow \
            status \
            --task-filter 'wheel-manylinux-2014-cp312-arm64' \
            --no-fetch \
            --validate \
            build-20
        env:
          CROSSBOW_GITHUB_TOKEN: ${{ secrets.CROSSBOW_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}

      

